plot(dnorm, -3, +3)
# Formula plot with options
plot(dnorm, -3, +3,
col = "#cc0000",
lwd = 5,
main = "Standard Normal Distribution",
xlab = "z-scores",
ylab = "Density")
# Clear packages
detach("package:datasets", unload = TRUE)
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
library(datasets)
?mtcars
head(mtcars)
barplot(mtcars$cyl)             # Doesn't work
# Need a table with frequencies for each category
cylinders <- table(mtcars$cyl)  # Create table
barplot(cylinders)              # Bar chart
plot(cylinders)                 # Default X-Y plot (lines)
# Clear environment
rm(list = ls())
rm(list = ls())
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
library(datasets)
?iris
head(iris)
hist(iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Petal.Width)
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Virginica",
xlab = "",
col = "blue")
# Restore graphic parameter
par(mfrow=c(1, 1))
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 2.7),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
# Clear plots
dev.off()  # But only if there IS a plot
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Virginica",
xlab = "",
col = "blue")
# Restore graphic parameter
par(mfrow=c(1, 1))
# Restore graphic parameter
par(mfrow=c(1, 1))
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)   # message = FALSE
setwd('E:/ITBA/Bioestadistica/parcial')
setwd('E:/ITBA/Bioestadistica/parcial')
setwd('E:/ITBA/Bioestadistica/parcial')
library(ggplot2)
library(magrittr)
library(knitr)
library(dplyr)
library(ggpubr)
library(nortest)
library(cowplot)  # subplots
library(car)
library(ggExtra)  # Graficos afuera de otros graficos
library(epitools)
library(gmodels)
library(readxl)
library(survival)
library(survminer)
library(lubridate)
datos <- read_xls('parcial1Q22.xls')
class(datos)
str(datos)
str(datos)
summary(datos)
datos$Hombre <- as.factor(datos$Hombre)
datos$EC <- as.factor(datos$EC)
data.frame(Variable = names(datos), Tipo = sapply(datos, class),
row.names = NULL) %>%
kable()
datos <- datos[complete.cases(datos), ]
summary(datos)
plt = ggplot(data = datos)
plt + geom_density(aes(x = Edad, color = 'Edad', fill = 'Edad'), alpha = 0.2) +
geom_density(aes(x = PAS, color = 'PAS'), fill = 'PAS', alpha = 0.2) +
theme(legend.position = 'right') +
scale_color_manual(values = c('Edad' = 'blue', 'PAS' = 'red')) +
labs(y = "Variables numéricas")
plt = ggplot(data = datos)
plt + geom_density(aes(x = Edad, color = 'Edad') , fill = 'blue', alpha = 0.2) +
geom_density(aes(x = PAS, color = 'PAS'), fill = 'red', alpha = 0.2) +
theme(legend.position = 'right') +
scale_color_manual(values = c('Edad' = 'blue', 'PAS' = 'red')) +
labs(y = "Variables numéricas")
plt = ggplot(data = datos)
plt + geom_density(aes(x = Edad, color = 'Edad') , fill = 'blue', alpha = 0.2) +
geom_density(aes(x = PAS, color = 'PAS'), fill = 'red', alpha = 0.2) +
theme(legend.position = 'right') +
scale_color_manual(values = c('Edad' = 'blue', 'PAS' = 'red')) +
labs(y = "Variables numéricas")
pruebas_normalidad = function(dataframe, xlab = "X", ylab = "Densidad", main = "Título")
{
# Tests de Normalidad
print(lillie.test(dataframe))
print(shapiro.test(dataframe))
# Q-Q plot
print(ggqqplot(dataframe, main=main))
# Estadísticos básicos
min <- min(dataframe)
max <- max(dataframe)
media <- mean(dataframe)
desvio <- sd(dataframe)
# Histograma
hist(dataframe, freq = F, main = main, xlab = xlab, ylab = ylab, border = "salmon",
col = "khaki")
curve(dnorm(x, media, desvio), from = min, to = max, add = TRUE, col = "black")
}
pruebas_normalidad(datos$Edad, "Edad (años)", "Densidad", "Edad")
pruebas_normalidad(datos$PAS, "PAS (mmHg)", "Densidad", "Presión sistólica en examen 1")
pruebas_normalidad(datos$PAD, "PAD (mmHg)", "Densidad", "Presión diastólica en examen 1")
pruebas_normalidad(datos$Colesterolemia, "Colesterolemia (mg %)", "Densidad", "Colesterolemia")
pruebas_normalidad(datos$cig, "Cig (cigarrillos/día)", "Densidad", "Cigarrillos fumados por día")
pruebas_normalidad(datos$Colesterolemia, "Colesterolemia (mg %)", "Densidad", "Colesterolemia")
pruebas_normalidad(datos$cig, "Cig (cigarrillos/día)", "Densidad", "Cigarrillos fumados por día")
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_edad
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_edad[,2]
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
mediana_edad[,2]
mediana_pas[,2]
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
print('Edad - Mediana (0|1)', mediana_edad[,2])
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
print(paste('Edad - Mediana (0|1)', mediana_edad[,2]))
mediana_pas[,2]
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
print(paste('Edad - Mediana (0)', 'Edad - Mediana (0)', mediana_edad[,2]))
mediana_pas[,2]
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
print(paste(['Edad - Mediana (0)','Edad - Mediana (1)'], , mediana_edad[,2]))
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
print(paste(('Edad - Mediana (0)','Edad - Mediana (1)'), , mediana_edad[,2]))
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
print(paste(('Edad - Mediana (0)','Edad - Mediana (1)') , mediana_edad[,2]))
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
paste('Mediana - (No EC | Si EC')
mediana_edad[,2]
mediana_pas[,2]
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
mediana_pad <- aggregate(datos$PAD, list(datos$EC), median)
mediana_colest <- aggregate(datos$Colesterolemia, list(datos$EC), median)
mediana_cig <- aggregate(datos$Hombre, list(datos$EC), median)
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
mediana_pad <- aggregate(datos$PAD, list(datos$EC), median)
mediana_colest <- aggregate(datos$Colesterolemia, list(datos$EC), median)
mediana_cig <- aggregate(datos$cig, list(datos$EC), median)
paste('Mediana - (No EC | Si EC)')
mediana_edad[,2]
mediana_pas[,2]
mediana_edad <- aggregate(datos$Edad, list(datos$EC), median)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
mediana_pad <- aggregate(datos$PAD, list(datos$EC), median)
mediana_colest <- aggregate(datos$Colesterolemia, list(datos$EC), median)
mediana_cig <- aggregate(datos$cig, list(datos$EC), median)
paste('Mediana - (No EC | Si EC)')
mediana_edad[,2]
mediana_pas[,2]
mediana_pad[,2]
mediana_colest[,2]
mediana_cig[,2]
mediana_edad <- aggregate(datos$Edad, list(datos$EC), iqr)
mediana_edad <- aggregate(datos$Edad, list(datos$EC), IQR)
mediana_pas <- aggregate(datos$PAS, list(datos$EC), median)
mediana_pad <- aggregate(datos$PAD, list(datos$EC), median)
mediana_colest <- aggregate(datos$Colesterolemia, list(datos$EC), median)
mediana_cig <- aggregate(datos$cig, list(datos$EC), median)
paste('IQR - (No EC | Si EC)')
mediana_edad[,2]
mediana_pas[,2]
mediana_pad[,2]
mediana_colest[,2]
mediana_cig[,2]
iqr_edad <- aggregate(datos$Edad, list(datos$EC), IQR)
iqr_pas <- aggregate(datos$PAS, list(datos$EC), IQR)
iqr_pad <- aggregate(datos$PAD, list(datos$EC), IQR)
iqr_colest <- aggregate(datos$Colesterolemia, list(datos$EC), IQR)
iqr_cig <- aggregate(datos$cig, list(datos$EC), IQR)
paste('IQR - (No EC | Si EC)')
iqr_edad[,2]
iqr_pas[,2]
iqr_pad[,2]
iqr_colest[,2]
iqr_cig[,2]
wilcox.test(datos$Edad[datos$EC==0], datos$Edad[datos$EC==1],
exact = F, conf.int = T)
wilcox.test(datos$PAS[datos$EC==0], datos$PAS[datos$EC==1],
exact = F, conf.int = T)
wilcox.test(datos$PAD[datos$EC==0], datos$PAD[datos$EC==1],
exact = F, conf.int = T)
wilcox.test(datos$Colesterolemia[datos$EC==0], datos$Colesterolemia[datos$EC==1],
exact = F, conf.int = T)
wilcox.test(datos$cig[datos$EC==0], datos$cig[datos$EC==1],
exact = F, conf.int = T)
chisq_1 <- chisq.test(datos$Hombre, datos$EC, correct = TRUE)
chisq_1
chisq_1 <- chisq.test(datos$Hombre, datos$EC, correct = TRUE)
chisq_1
count(datos$Hombre[datos$Hombre == 0 && datos$EC == 0])
sum(datos$Hombre[datos$Hombre == 1 && datos$EC == 0])
sum(datos$Hombre[datos$EC == 0])
count(datos$Hombre)
count(datos, Hombre)
count(datos[datos$EC == 0], Hombre)
count(datos[datos$EC == 0], Hombre[datos$EC == 0])
count(datos, Hombre[datos$EC == 0])
count(datos$Hombre[datos$EC == 0])
summary(datos$Hombre)
summary(datos[datos$EC == 0]$Hombre)
summary(datos$Hombre[datos$EC == 0])
summary(datos$Hombre[datos$EC == 1])
summary(datos$`packs/y`[datos$EC == 0])
count(datos$`packs/y`[datos$EC == 0])
count(datos[datos$EC == 0]$`packs/y`)
count(datos$`packs/y`)
summary(datos$`packs/y`)
summary(datos[datos$EC == 1]$`packs/y`)
summary(datos$`packs/y`[datos$EC == 1])
chisq_1 <- chisq.test(datos$`packs/y`, datos$EC)
chisq_1
nrow(datos[datos$EC == 1])
nrow(datos$EC == 1)
sum(datos$EC == 1)
sum(datos$EC == 0 && datos$`packs/y` == 0)
sum(datos$EC == 0 && datos$packs/y == 0)
sum(datos$EC == 0 & datos$`packs/y` == 0)
sum(datos$EC == 0 & datos$`packs/y` == 0)
sum(datos$EC == 0 & datos$`packs/y` == 1)
sum(datos$EC == 0 & datos$`packs/y` == 2)
sum(datos$EC == 1 & datos$`packs/y` == 0)
sum(datos$EC == 1 & datos$`packs/y` == 1)
sum(datos$EC == 1 & datos$`packs/y` == 2)
datos$`packs/y`[datos$`packs/y`==0]
datos$`packs/y` == 0 #[datos$`packs/y`==0]
datos$`packs/y`[datos$`packs/y`==0]
packs_dummy <- dummy_cols(packs)
library(ggplot2)
library(magrittr)
library(knitr)
library(dplyr)
library(ggpubr)
library(nortest)
library(cowplot)  # subplots
library(car)
library(ggExtra)  # Graficos afuera de otros graficos
library(epitools)
library(gmodels)
library(readxl)
library(survival)
library(survminer)
library(lubridate)
library(fastDummies)
install.packages(fastDummies)
install.packages('fastDummies')
library(ggplot2)
library(magrittr)
library(knitr)
library(dplyr)
library(ggpubr)
library(nortest)
library(cowplot)  # subplots
library(car)
library(ggExtra)  # Graficos afuera de otros graficos
library(epitools)
library(gmodels)
library(readxl)
library(survival)
library(survminer)
library(lubridate)
library(fastDummies)
packs_dummy <- dummy_cols(packs)
packs_dummy <- dummy_cols(datos$`packs/y`)
colnames(packs_dummy)<-c('packs','packs0', 'packs1', 'packs2')
datos_dummy<-cbind(datos,packs_dummy)
str(datos_dummy)
#BD2$Cordoba<- as.factor(BD2$Cordoba)
#BD2$Salta<- as.factor(BD2$Salta)
#BD2$BuenosAires<- as.factor(BD2$BuenosAires)
packs_dummy <- dummy_cols(datos$`packs/y`)
colnames(packs_dummy)<-c('packs0', 'packs1', 'packs2')
datos_dummy<-cbind(datos,packs_dummy)
str(datos_dummy)
#BD2$Cordoba<- as.factor(BD2$Cordoba)
#BD2$Salta<- as.factor(BD2$Salta)
#BD2$BuenosAires<- as.factor(BD2$BuenosAires)
packs_dummy <- dummy_cols(datos$`packs/y`)
colnames(packs_dummy)<-c('packs','packs0', 'packs1', 'packs2')
datos_dummy<-cbind(datos,packs_dummy)
str(datos_dummy)
#BD2$Cordoba<- as.factor(BD2$Cordoba)
#BD2$Salta<- as.factor(BD2$Salta)
#BD2$BuenosAires<- as.factor(BD2$BuenosAires)
packs_dummy <- dummy_cols(datos$`packs/y`)
colnames(packs_dummy)<-c('packs','packs0', 'packs1', 'packs2')
datos_dummy<-cbind(datos,packs_dummy)
str(datos_dummy)
datos_dummy$packs0 <- as.factor(datos_dummy$packs0)
datos_dummy$packs1 <- as.factor(datos_dummy$packs1)
datos_dummy$packs2 <- as.factor(datos_dummy$packs2)
str(datos_dummy)
logistica_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs0 + packs1 + packs2, data = datos_dummy, family = "binomial")
summary(logistica_1)
logistica_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs0 + packs1 + packs2, data = datos_dummy, family = "binomial")
summary(logistica_1)
OR1 = exp(coefficients(logistica_1))
b = exp(confint(logistica_1))
OR = cbind(OR1,b)
OR
datos_dummy$EC <- as.numeric(datos_dummy$EC)
omnibus <- aov(logistica_1, data = datos_dummy)
summary(omnibus)
prediccion <- predict(logistica_1, type="response")
hosmer <- hoslem.test(logistica_1$y, logistica_1gis$fitted.values) # Test Hosmwe-Lemeshow
library(ggplot2)
library(magrittr)
library(knitr)
library(dplyr)
library(ggpubr)
library(nortest)
library(cowplot)  # subplots
library(car)
library(ggExtra)  # Graficos afuera de otros graficos
library(epitools)
library(gmodels)
library(readxl)
library(survival)
library(survminer)
library(lubridate)
library(fastDummies)
library(ResourceSelection)
install.packages('ResourceSelection')
library(ggplot2)
library(magrittr)
library(knitr)
library(dplyr)
library(ggpubr)
library(nortest)
library(cowplot)  # subplots
library(car)
library(ggExtra)  # Graficos afuera de otros graficos
library(epitools)
library(gmodels)
library(readxl)
library(survival)
library(survminer)
library(lubridate)
library(fastDummies)
library(ResourceSelection)
prediccion <- predict(logistica_1, type="response")
hosmer <- hoslem.test(logistica_1$y, logistica_1gis$fitted.values) # Test Hosmwe-Lemeshow
prediccion <- predict(logistica_1, type="response")
hosmer <- hoslem.test(logistica_1$y, logistica_1$fitted.values) # Test Hosmwe-Lemeshow
hosmer
logistica_2_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs1 + packs2, data = datos_dummy, family = "binomial")
logistica_2_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs1 + packs2, data = datos_dummy, family = "binomial")
logistica_2_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs0 + packs2, data = datos_dummy, family = "binomial")
logistica_2_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs1 + packs2, data = datos_dummy, family = "binomial")
datos_dummy$EC <- as.factor(datos_dummy$EC)
logistica_2_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs1 + packs2, data = datos_dummy, family = "binomial")
summary(logistica_2_1)
datos_dummy$EC <- as.factor(datos_dummy$EC)
logistica_2_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs2, data = datos_dummy, family = "binomial")
summary(logistica_2_1)
datos_dummy$EC <- as.factor(datos_dummy$EC)
logistica_2_1 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs1 + packs2, data = datos_dummy, family = "binomial")
summary(logistica_2_1)
datos_dummy$EC <- as.factor(datos_dummy$EC)
logistica_2_2 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig +
packs2, data = datos_dummy, family = "binomial")
summary(logistica_2_2)
datos_dummy$EC <- as.factor(datos_dummy$EC)
logistica_2_3 <- glm(EC ~ Edad + PAS + PAD + Colesterolemia + Hombre + cig,
data = datos_dummy, family = "binomial")
summary(logistica_2_3)
datos_dummy$EC <- as.factor(datos_dummy$EC)
logistica_2_4 <- glm(EC ~ Edad + PAS + Colesterolemia + Hombre + cig,
data = datos_dummy, family = "binomial")
summary(logistica_2_4)
datos_dummy$EC <- as.factor(datos_dummy$EC)
logistica_2_5 <- glm(EC ~ Edad + PAS + Colesterolemia + Hombre,
data = datos_dummy, family = "binomial")
summary(logistica_2_5)
OR2 = exp(coefficients(logistica_2_5))
b = exp(confint(logistica_2_5))
OR2 = cbind(OR2,b)
OR2
datos_dummy$EC <- as.numeric(datos_dummy$EC)
omnibus <- aov(logistica_2_5, data = datos_dummy)
summary(omnibus)
datos_dummy$EC <- as.numeric(datos_dummy$EC)
omnibus2 <- aov(logistica_2_5, data = datos_dummy)
summary(omnibus2)
prediccion2 <- predict(logistica_2_5, type="response")
hosmer2 <- hoslem.test(logistica_2_5$y, logistica_2_5$fitted.values) # Test Hosmwe-Lemeshow
hosmer2
lrtest(logistica_1, logistica_2_5)
install.packages('lmtest')
library(ggplot2)
library(magrittr)
library(knitr)
library(dplyr)
library(ggpubr)
library(nortest)
library(cowplot)  # subplots
library(car)
library(ggExtra)  # Graficos afuera de otros graficos
library(epitools)
library(gmodels)
library(readxl)
library(survival)
library(survminer)
library(lubridate)
library(fastDummies)
library(ResourceSelection)
library(lmtest)
lrtest(logistica_1, logistica_2_5)
